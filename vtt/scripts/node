#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Pose, PoseStamped
import vtt.voice_recognition.voice_recognition as sr
import vtt.text_reasoning.text_reasoning as tr

class command_robot(object):
	def __init__(self):
		self.recognizer = sr.Recognizer()
		self.microphone = sr.Microphone()
		self.text_reasoning = tr.textreasoning()
		
		self.command_publisher = rospy.Publisher("/command", PoseStamped)
		self.direction_publisher = rospy.Publisher("/direction", PoseStamped)
		self.features = rospy.get_param('~features')

	def command(self):
		text = node.text_reasoning.voice_to_text('move beauty')
		#if text is None:
			#continue
		if text[0] == "direction":
			for feature in self.features:
				if feature['name'] == text[1]:
					goal = PoseStamped()
								
					goal.pose.position.x = feature['pose']['position']['x']
					goal.pose.position.y = feature['pose']['position']['y']
					goal.pose.position.z = feature['pose']['position']['z']
					goal.pose.orientation.w = feature['pose']['orientation']['w']
					goal.header.frame_id = "/map"
					self.direction_publisher.publish(goal)
					print('Publishing to direction topic')
		elif text[0] == "command":
			for feature in self.features:
				if feature['name'] == text[1]:
					goal = PoseStamped()
								
					goal.pose.position.x = feature['pose']['position']['x']
					goal.pose.position.y = feature['pose']['position']['y']
					goal.pose.position.z = feature['pose']['position']['z']
					goal.pose.orientation.w = feature['pose']['orientation']['w']
					goal.header.frame_id = "map"
					self.command_publisher.publish(goal)
					print('Publishing to command topic')
		

if __name__ == '__main__':
	rospy.init_node("command_robot")
	node = command_robot()
	node.command()
	rospy.spin()
	
